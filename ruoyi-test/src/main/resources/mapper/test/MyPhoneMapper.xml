<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.test.mapper.MyPhoneMapper">
    
    <resultMap type="MyPhone" id="MyPhoneResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="model"    column="model"    />
        <result property="price"    column="price"    />
    </resultMap>

    <sql id="selectMyPhoneVo">
        select id, name, model, price from my_phone
    </sql>

    <select id="selectMyPhoneList" parameterType="MyPhone" resultMap="MyPhoneResult">
        <include refid="selectMyPhoneVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="model != null  and model != ''"> and model = #{model}</if>
            <if test="price != null "> and price = #{price}</if>
        </where>
    </select>
    
    <select id="selectMyPhoneById" parameterType="Long" resultMap="MyPhoneResult">
        <include refid="selectMyPhoneVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertMyPhone" parameterType="MyPhone" useGeneratedKeys="true" keyProperty="id">
        insert into my_phone
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="model != null">model,</if>
            <if test="price != null">price,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="model != null">#{model},</if>
            <if test="price != null">#{price},</if>
         </trim>
    </insert>

    <update id="updateMyPhone" parameterType="MyPhone">
        update my_phone
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="model != null">model = #{model},</if>
            <if test="price != null">price = #{price},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMyPhoneById" parameterType="Long">
        delete from my_phone where id = #{id}
    </delete>

    <delete id="deleteMyPhoneByIds" parameterType="String">
        delete from my_phone where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>